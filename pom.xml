<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.gbif</groupId>
  <artifactId>motherpom</artifactId>
  <version>57-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>GBIF Mother POM</name>
  <url>https://github.org/gbif/${project.artifactId}</url>

  <scm>
    <connection>scm:git:git@github.com:gbif/motherpom.git</connection>
    <url>https://github.com/gbif/motherpom</url>
    <developerConnection>scm:git:git@github.com:gbif/motherpom.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- Minimum Maven version, used by maven-enforcer-plugin to fail if earlier versions are used -->
    <minimumMavenVersion>3.2.2</minimumMavenVersion>

    <!-- All three of the following properties must be updated when changing the JDK level -->
    <java.version>1.8</java.version>
    <animal-sniffer-signature.artifact>java18</animal-sniffer-signature.artifact>
    <animal-sniffer-signature.version>1.0</animal-sniffer-signature.version>

    <!-- Spotless files: license header, import order etc. -->
    <spotless.files.path>https://raw.githubusercontent.com/gbif/motherpom/master</spotless.files.path>

    <!-- Encoding -->
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

    <!-- Checkstyle -->
    <google-java-format.version>1.7</google-java-format.version>
    <plexus-compiler-javac-errorprone.version>2.8.6</plexus-compiler-javac-errorprone.version>
    <error_prone_core.version>2.3.2</error_prone_core.version>
    <!-- Use to add additional exclusions Add a | the beginning -->
    <errorprone.excludedpaths />

    <!-- Sonar -->
    <sonar.language>java</sonar.language>
    <sonar.projectName />

    <!-- Others -->
    <release.tagNameBase>${project.artifactId}</release.tagNameBase>
    <github.global.server>github</github.global.server>

    <!-- Plugin versions -->
    <animal-sniffer-plugin.version>1.20</animal-sniffer-plugin.version>
    <doxia-module-markdown.version>1.9.1</doxia-module-markdown.version>
    <extra-enforcer-rules.version>1.3</extra-enforcer-rules.version>
    <jetty-maven-plugin.version>11.0.1</jetty-maven-plugin.version>
    <liquibase-maven-plugin.version>4.3.2</liquibase-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
    <maven-archetype-plugin.version>3.2.0</maven-archetype-plugin.version>
    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
    <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
    <maven-jdeps-plugin.version>3.1.2</maven-jdeps-plugin.version>
    <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
    <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
    <maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
    <maven-scm-publish-plugin.version>3.1.0</maven-scm-publish-plugin.version>
    <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <spotless-maven-plugin.version>2.9.0</spotless-maven-plugin.version>
    <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>

  </properties>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://raw.github.com/gbif/motherpom/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Global Biodiversity Information Facility (GBIF)</name>
    <url>https://www.gbif.org</url>
  </organization>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>https://repository.gbif.org/content/groups/gbif/</url>
    </repository>
    <repository>
      <id>gbif-thirdparty</id>
      <url>https://repository.gbif.org/content/repositories/thirdparty/</url>
    </repository>
    <repository>
      <id>cloudera-repos</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>gbif-release</id>
      <url>http://repository.gbif.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>gbif-snapshot</id>
      <url>http://repository.gbif.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>${maven-archetype-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <compilerId>javac-with-errorprone</compilerId>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <compilerArgs>
              <arg>-XepExcludedPaths:.*/src/main/java-generated/.*${errorprone.excludedpaths}</arg>
              <arg>-XepDisableWarningsInGeneratedCode</arg>
              <arg>-Xep:MissingOverride:ERROR</arg>
              <arg>-Xep:ParameterName:OFF</arg>
            </compilerArgs>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-javac-errorprone</artifactId>
              <version>${plexus-compiler-javac-errorprone.version}</version>
            </dependency>
            <!-- Override plexus-compiler-javac-errorprone's dependency on Errorprone with the latest version -->
            <dependency>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${error_prone_core.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
          <configuration>
            <java>
              <licenseHeader>
                <file>${spotless.files.path}/gbif-license-header</file>
              </licenseHeader>
              <removeUnusedImports />
              <importOrder>
                <file>${spotless.files.path}/gbif.importorder</file>
              </importOrder>
            </java>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${maven-eclipse-plugin.version}</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>${animal-sniffer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-jdk-api</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- This checks to ensure future JDK APIs are not used -->
            <signature>
              <groupId>org.codehaus.mojo.signature</groupId>
              <artifactId>${animal-sniffer-signature.artifact}</artifactId>
              <version>${animal-sniffer-signature.version}</version>
            </signature>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven-3</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[${minimumMavenVersion},)</version>
                  </requireMavenVersion>
                  <!-- This checks to ensure previous JDK versions are not used -->
                  <requireJavaVersion>
                    <version>[${java.version},)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>enforce-bytecode-version</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <!-- This checks bytecode in dependencies for the expected classfile version -->
                  <enforceBytecodeVersion>
                    <maxJdkVersion>${java.version}</maxJdkVersion>
                  </enforceBytecodeVersion>
                </rules>
                <fail>false</fail>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>${extra-enforcer-rules.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <phase>integration-test</phase>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <phase>verify</phase>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>${failsafeArgLine}</argLine>
            <runOrder>random</runOrder>
            <trimStackTrace>false</trimStackTrace>
            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addClasspath>true</addClasspath>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>attach-test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <doclint>none</doclint>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jdeps-plugin</artifactId>
          <version>${maven-jdeps-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <configuration>
            <locales>en</locales>
            <skipDeploy>true</skipDeploy>
          </configuration>
          <executions>
            <execution>
              <id>attach-descriptor</id>
              <goals>
                <goal>attach-descriptor</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>${doxia-module-markdown.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>${maven-scm-publish-plugin.version}</version>
          <configuration>
            <checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
            <checkinComment>Publishing Site Docs for ${project.artifactId}:${project.version}
            </checkinComment>
            <skipDeletedFiles>false</skipDeletedFiles>
            <!-- publish to same git repo as code, just use a different branch -->
            <pubScmUrl>${project.scm.connection}</pubScmUrl>
            <!-- This is the git branch that the web "pages" are located in -->
            <scmBranch>gh-pages</scmBranch>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>${maven-scm-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>${surefireArgLine}</argLine>
            <runOrder>random</runOrder>
            <trimStackTrace>false</trimStackTrace>
            <excludes>
              <exclude>**/*IT.java</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>${liquibase-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <goals>deploy</goals>
            <preparationGoals>install</preparationGoals>
            <resume>false</resume>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>gbif-release</releaseProfiles>
            <tagNameFormat>${release.tagNameBase}-@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jdeps-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <includeDependencySources>true</includeDependencySources>
          <dependencySourceIncludes>
            <!-- include ONLY dependencies I control -->
            <dependencySourceInclude>org.gbif:*</dependencySourceInclude>
          </dependencySourceIncludes>
          <failOnError>false</failOnError>
          <docfilessubdirs>true</docfilessubdirs>
          <quiet>true</quiet>
          <linksource>true</linksource>
          <show>public</show>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!-- automatically used by the release plugin -->
    <profile>
      <id>gbif-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-release-constraints</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${minimumMavenVersion},)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${java.version},)</version>
                </requireJavaVersion>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!</message>
                </requirePluginVersions>
                <requireReleaseDeps>
                  <message>No Snapshot dependencies allowed!</message>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </plugin>

          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <phase>site</phase>
                <goals>
                  <goal>stage</goal>
                </goals>
              </execution>
              <execution>
                <id>attach-descriptor</id>
                <goals>
                  <goal>attach-descriptor</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-publish-plugin</artifactId>
            <executions>
              <execution>
                <phase>site-deploy</phase>
                <goals>
                  <goal>publish-scm</goal>
                </goals>
              </execution>
            </executions>
            <!-- do not publish submodules -->
            <inherited>false</inherited>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <doclint>none</doclint>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>spotless-check</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <spotless.check.skip>false</spotless.check.skip>
      </properties>
    </profile>
  </profiles>
</project>
